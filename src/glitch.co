define "glitch", ["module_base", "fx_modules"], !(mb, modules)->
	width = height = 0
	scale = 2

	sizeChange = !->
		width := canvas.width = 320
		height := canvas.height = 240
		canvas.style <<< {width: width * scale, height: height * scale}

	canvas = document.createElement "canvas"
		document.body.appendChild &
		context = &getContext "2d"

	sizeChange()


	gui = new dat.GUI()
	mb.addModulesToGUI(gui)

	moduleOrder = <[ ycbcrPre leaks sliceglitch noise bitbang bloom ycbcrPost tvsim ]>

	perf = window.performance || {}
	perf.now = perf.now || perf.mozNow || perf.msNow || perf.oNow || perf.webkitNow || (-> new Date().getTime())


	draw = !->
		context.fillStyle = '#346434'
		context.fillRect(0, 0, canvas.width, canvas.height)
		context.fillStyle = '#FFAA00'
		t = +new Date() / 1000.0
		x = (t * 150) % canvas.width
		context.fillRect(x, 64, 115, 223)
		data = context.getImageData(0, 0, canvas.width, canvas.height)
		times = []
		for name of moduleOrder then
			if module = mb.modules[name] then
				t0 = perf.now()
				settings = mb.settings[name] || {}
				out = module.action(settings, context, data)
				data = out?data || data
				t1 = perf.now()
				times.push("#name: #{Math.round(1 * (t1 - t0))}")
		context.putImageData(data, 0, 0)
		context.font = "7pt arial"
		context.fillStyle = "white"
		context.beginPath()
		for t, y of times
			context.fillText(t, 5, 15 + y * 10)

	wrapDraw = !->
		requestAnimationFrame(wrapDraw)
		draw()

	window.testDraw = testDraw = !->
		console.time("draw")
		for x from 0 til 100 => draw()
		console.timeEnd("draw")

	#testDraw()
	wrapDraw()

#	wrapDraw()